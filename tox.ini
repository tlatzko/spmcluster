[tox]
envlist =
    clean,
    check,
    2.6-cover,
    2.6-nocov,
    2.7-cover,
    2.7-nocov,
    3.3-cover,
    3.3-nocov,
    3.4-cover,
    3.4-nocov,
    3.5-cover,
    3.5-nocov,
    pypy-cover,
    pypy-nocov,
    report,
    docs

[testenv]
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
passenv =
    *
deps =
    nose
commands =
    python setup.py clean --all build_ext --force --inplace
    {posargs:nosetests -v tests}

[testenv:spell]
setenv =
    SPELLCHECK=1
commands =
    sphinx-build -b spelling docs dist/docs
skip_install = true
usedevelop = true
deps =
    -r{toxinidir}/docs/requirements.txt
    sphinxcontrib-spelling
    pyenchant

[testenv:docs]
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
    sphinx-build {posargs:-E} -b html docs dist/docs
    sphinx-build -b linkcheck docs dist/docs

[testenv:bootstrap]
deps =
    jinja2
    matrix
skip_install = true
usedevelop = false
commands =
    python ci/bootstrap.py
passenv =
    *

[testenv:check]
basepython = python3.4
deps =
    docutils
    check-manifest
    flake8
    readme
    pygments
skip_install = true
usedevelop = false
commands =
    python setup.py check --strict --metadata --restructuredtext
    check-manifest {toxinidir}
    flake8 src tests

[testenv:coveralls]
deps =
    coveralls
skip_install = true
usedevelop = false
commands =
    coverage combine
    coverage report
    coveralls --merge=extension-coveralls.json []

[testenv:codecov]
deps =
    codecov
skip_install = true
usedevelop = false
commands =
    coverage combine
    coverage report
    coverage xml --ignore-errors
    codecov []


[testenv:extension-coveralls]
deps =
    cpp-coveralls
skip_install = true
usedevelop = false
commands =
    coveralls --build-root=. --include=src --dump=extension-coveralls.json []

[testenv:report]
basepython = python3.4
deps = coverage
skip_install = true
usedevelop = false
commands =
    coverage combine
    coverage report

[testenv:clean]
commands = coverage erase
skip_install = true
usedevelop = false
deps = coverage

[testenv:2.6-cover]
basepython = {env:TOXPYTHON:python2.6}
setenv =
    {[testenv]setenv}
    WITH_COVERAGE=yes
    SETUPPY_CFLAGS=-coverage
usedevelop = true
commands =
    python setup.py clean --all build_ext --force --inplace
    {posargs:nosetests --with-coverage --cover-package=spm}
deps =
    {[testenv]deps}
    coverage

[testenv:2.6-nocov]
basepython = {env:TOXPYTHON:python2.6}

[testenv:2.7-cover]
basepython = {env:TOXPYTHON:python2.7}
setenv =
    {[testenv]setenv}
    WITH_COVERAGE=yes
    SETUPPY_CFLAGS=-coverage
usedevelop = true
commands =
    python setup.py clean --all build_ext --force --inplace
    {posargs:nosetests --with-coverage --cover-package=spm}
deps =
    {[testenv]deps}
    coverage

[testenv:2.7-nocov]
basepython = {env:TOXPYTHON:python2.7}

[testenv:3.3-cover]
basepython = {env:TOXPYTHON:python3.3}
setenv =
    {[testenv]setenv}
    WITH_COVERAGE=yes
    SETUPPY_CFLAGS=-coverage
usedevelop = true
commands =
    python setup.py clean --all build_ext --force --inplace
    {posargs:nosetests --with-coverage --cover-package=spm}
deps =
    {[testenv]deps}
    coverage

[testenv:3.3-nocov]
basepython = {env:TOXPYTHON:python3.3}

[testenv:3.4-cover]
basepython = {env:TOXPYTHON:python3.4}
setenv =
    {[testenv]setenv}
    WITH_COVERAGE=yes
    SETUPPY_CFLAGS=-coverage
usedevelop = true
commands =
    python setup.py clean --all build_ext --force --inplace
    {posargs:nosetests --with-coverage --cover-package=spm}
deps =
    {[testenv]deps}
    coverage

[testenv:3.4-nocov]
basepython = {env:TOXPYTHON:python3.4}

[testenv:3.5-cover]
basepython = {env:TOXPYTHON:python3.5}
setenv =
    {[testenv]setenv}
    WITH_COVERAGE=yes
    SETUPPY_CFLAGS=-coverage
usedevelop = true
commands =
    python setup.py clean --all build_ext --force --inplace
    {posargs:nosetests --with-coverage --cover-package=spm}
deps =
    {[testenv]deps}
    coverage

[testenv:3.5-nocov]
basepython = {env:TOXPYTHON:python3.5}

[testenv:pypy-cover]
basepython = {env:TOXPYTHON:pypy}
setenv =
    {[testenv]setenv}
    WITH_COVERAGE=yes
    SETUPPY_CFLAGS=-coverage
usedevelop = true
commands =
    python setup.py clean --all build_ext --force --inplace
    {posargs:nosetests --with-coverage --cover-package=spm}
deps =
    {[testenv]deps}
    coverage

[testenv:pypy-nocov]
basepython = {env:TOXPYTHON:pypy}



